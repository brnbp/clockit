#!/usr/bin/env node

require('dotenv').config();
const yargs = require('yargs');
const recordsDB = require('../src/db/records');
const Clockit = require('../src/clockit/clockit');
const time = require('../src/clockit/time');

const getTime = (hour = null) => hour || time.currentTime();
const getDate = (date = null) => date || time.currentDate();

yargs
  .command('init', 'start service', () => {
    recordsDB.setup((isReady) => {
      if (isReady) return console.log('service already started');
      return console.log('service started');
    });
  })
  .command('in', 'check in at morning', () => {
    const date = getDate(yargs.argv.date);
    const time = getTime(yargs.argv.time);
d
    Clockit.start(date, time);
  })
  .command('lin', 'check in lunch', () => {
    const date = getDate(yargs.argv.date);
    const time = getTime(yargs.argv.time);

    Clockit.lunchIn(date, time);
  })
  .command('lout', 'check out lunch', () => {
    const date = getDate(yargs.argv.date);
    const time = getTime(yargs.argv.time);

    Clockit.lunchOut(date, time);
  })
  .command('out', 'check out at afternoon', () => {
    const date = getDate(yargs.argv.date);
    const time = getTime(yargs.argv.time);

    Clockit.end(date, time);
  })
  .command('clear', 'clear all clocks from current day', () => {
    Clockit.clearToday();
  })
  .command('status', 'status for day', () => {
    Clockit.status();
  })
  .argv;
